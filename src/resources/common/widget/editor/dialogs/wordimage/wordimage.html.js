define(function(require, exports, module) {
<<<<<<< HEAD
    module.exports="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n <title></title>\r\n <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\r\n <script type=\"text/javascript\" src=\"../internal.js\"></script>\r\n <style type=\"text/css\">\r\n .wrapper{width: 600px;padding: 10px;height: 352px;overflow: hidden;position: relative;border-bottom: 1px solid #d7d7d7}\r\n .localPath input{float: left;width: 350px;line-height: 20px;height: 20px;}\r\n #clipboard{float:left;width: 70px;height: 30px; }\r\n .description{ color: #0066cc; margin-top: 2px; width: 450px; height: 45px;float: left;line-height: 22px}\r\n #upload{width: 100px;height: 30px;float: right; margin:10px 2px 0 0;cursor: pointer;}\r\n #msg{ width: 140px; height: 30px; line-height:25px;float: left;color: red}\r\n </style>\r\n</head>\r\n<body>\r\n <div class=\"wrapper\">\r\n <div class=\"localPath\">\r\n <input id=\"localPath\" type=\"text\" readonly />\r\n <div id=\"clipboard\"></div>\r\n <div id=\"msg\"></div>\r\n </div>\r\n <div id=\"flashContainer\"></div>\r\n <div>\r\n <div id=\"upload\" style=\"display: none\" ><img id=\"uploadBtn\"></div>\r\n <div class=\"description\">\r\n <span style=\"color: red\"><var id=\"lang_resave\"></var>: </span><var id=\"lang_step\"></var>\r\n </div>\r\n </div>\r\n </div>\r\n <script type=\"text/javascript\" src=\"tangram.js\"></script>\r\n <script type=\"text/javascript\" src=\"wordimage.js\"></script>\r\n <script type=\"text/javascript\">\r\n editor.setOpt({\r\n wordImageFieldName:\"upfile\",\r\n compressSide:0,\r\n maxImageSideLength:900\r\n });\r\n\r\n //全局变量\r\n var imageUrls = [], //用于保存从服务器返回的图片信息数组\r\n selectedImageCount = 0, //当前已选择的但未上传的图片数量\r\n optImageUrl = editor.getActionUrl(editor.getOpt('imageActionName')),\r\n optImageFieldName = editor.getOpt('imageFieldName'),\r\n optImageCompressBorder = editor.getOpt('imageCompressEnable') ? editor.getOpt('imageCompressBorder'):null,\r\n maxSize = editor.getOpt('imageMaxSize') / 1024,\r\n extension = editor.getOpt('imageAllowFiles').join(';').replace(/\\./g, '*.');\r\n\r\n /* 添加额外的GET参数 */\r\n var params = utils.serializeParam(editor.queryCommandValue('serverparam')) || '',\r\n urlWidthParams = optImageUrl + (optImageUrl.indexOf('?') == -1 ? '?':'&') + params;\r\n\r\n utils.domReady(function(){\r\n //创建Flash相关的参数集合\r\n var flashOptions = {\r\n container:\"flashContainer\", //flash容器id\r\n url:urlWidthParams, // 上传处理页面的url地址\r\n ext:editor.queryCommandValue('serverParam') || {}, //可向服务器提交的自定义参数列表\r\n fileType:'{\"description\":\"'+lang.fileType+'\", \"extension\":\"' + extension + '\"}', //上传文件格式限制\r\n flashUrl:'imageUploader.swf', //上传用的flash组件地址\r\n width:600, //flash的宽度\r\n height:272, //flash的高度\r\n gridWidth:120, // 每一个预览图片所占的宽度\r\n gridHeight:120, // 每一个预览图片所占的高度\r\n picWidth:100, // 单张预览图片的宽度\r\n picHeight:100, // 单张预览图片的高度\r\n uploadDataFieldName: optImageFieldName, // POST请求中图片数据的key\r\n picDescFieldName:'pictitle', // POST请求中图片描述的key\r\n maxSize: maxSize, // 文件的最大体积,单位M\r\n compressSize:1, // 上传前如果图片体积超过该值，会先压缩,单位M\r\n maxNum:32, // 单次最大可上传多少个文件\r\n compressSide: 0, //等比压缩的基准，0为按照最长边，1为按照宽度，2为按照高度\r\n compressLength: optImageCompressBorder //能接受的最大边长，超过该值Flash会自动等比压缩\r\n };\r\n //回调函数集合，支持传递函数名的字符串、函数句柄以及函数本身三种类型\r\n var callbacks={\r\n selectFileCallback: function(selectFiles){ // 选择文件的回调\r\n selectedImageCount += selectFiles.length;\r\n if(selectedImageCount) baidu.g(\"upload\").style.display = \"\";\r\n dialog.buttons[0].setDisabled(true); //初始化时置灰确定按钮\r\n },\r\n deleteFileCallback: function(delFiles){ // 删除文件的回调\r\n selectedImageCount -= delFiles.length;\r\n if (!selectedImageCount) {\r\n baidu.g(\"upload\").style.display = \"none\";\r\n dialog.buttons[0].setDisabled(false); //没有选择图片时重新点亮按钮\r\n }\r\n },\r\n uploadCompleteCallback: function(data){ // 单个文件上传完成的回调\r\n try{var info = eval(\"(\" + data.info + \")\");\r\n info && imageUrls.push(info);\r\n selectedImageCount--;\r\n }catch(e){}\r\n },\r\n uploadErrorCallback: function (data){ // 单个文件上传失败的回调,\r\n console && console.log(data);\r\n },\r\n allCompleteCallback: function(){ // 全部上传完成时的回调\r\n dialog.buttons[0].setDisabled(false); //上传完毕后点亮按钮\r\n }\r\n //exceedFileCallback: 'exceedFileCallback', // 文件超出限制的最大体积时的回调\r\n //startUploadCallback: startUploadCallback // 开始上传某个文件时的回调\r\n };\r\n wordImage.init(flashOptions,callbacks);\r\n });\r\n\r\n </script>\r\n\r\n</body>\r\n</html>";
=======
    module.exports="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n <title></title>\n <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n <script type=\"text/javascript\" src=\"../internal.js\"></script>\n <style type=\"text/css\">\n .wrapper{width: 600px;padding: 10px;height: 352px;overflow: hidden;position: relative;border-bottom: 1px solid #d7d7d7}\n .localPath input{float: left;width: 350px;line-height: 20px;height: 20px;}\n #clipboard{float:left;width: 70px;height: 30px; }\n .description{ color: #0066cc; margin-top: 2px; width: 450px; height: 45px;float: left;line-height: 22px}\n #upload{width: 100px;height: 30px;float: right; margin:10px 2px 0 0;cursor: pointer;}\n #msg{ width: 140px; height: 30px; line-height:25px;float: left;color: red}\n </style>\n</head>\n<body>\n <div class=\"wrapper\">\n <div class=\"localPath\">\n <input id=\"localPath\" type=\"text\" readonly />\n <div id=\"clipboard\"></div>\n <div id=\"msg\"></div>\n </div>\n <div id=\"flashContainer\"></div>\n <div>\n <div id=\"upload\" style=\"display: none\" ><img id=\"uploadBtn\"></div>\n <div class=\"description\">\n <span style=\"color: red\"><var id=\"lang_resave\"></var>: </span><var id=\"lang_step\"></var>\n </div>\n </div>\n </div>\n <script type=\"text/javascript\" src=\"tangram.js\"></script>\n <script type=\"text/javascript\" src=\"wordimage.js\"></script>\n <script type=\"text/javascript\">\n editor.setOpt({\n wordImageFieldName:\"upfile\",\n compressSide:0,\n maxImageSideLength:900\n });\n\n //全局变量\n var imageUrls = [], //用于保存从服务器返回的图片信息数组\n selectedImageCount = 0, //当前已选择的但未上传的图片数量\n optImageUrl = editor.getActionUrl(editor.getOpt('imageActionName')),\n optImageFieldName = editor.getOpt('imageFieldName'),\n optImageCompressBorder = editor.getOpt('imageCompressEnable') ? editor.getOpt('imageCompressBorder'):null,\n maxSize = editor.getOpt('imageMaxSize') / 1024,\n extension = editor.getOpt('imageAllowFiles').join(';').replace(/\\./g, '*.');\n\n /* 添加额外的GET参数 */\n var params = utils.serializeParam(editor.queryCommandValue('serverparam')) || '',\n urlWidthParams = optImageUrl + (optImageUrl.indexOf('?') == -1 ? '?':'&') + params;\n\n utils.domReady(function(){\n //创建Flash相关的参数集合\n var flashOptions = {\n container:\"flashContainer\", //flash容器id\n url:urlWidthParams, // 上传处理页面的url地址\n ext:editor.queryCommandValue('serverParam') || {}, //可向服务器提交的自定义参数列表\n fileType:'{\"description\":\"'+lang.fileType+'\", \"extension\":\"' + extension + '\"}', //上传文件格式限制\n flashUrl:'imageUploader.swf', //上传用的flash组件地址\n width:600, //flash的宽度\n height:272, //flash的高度\n gridWidth:120, // 每一个预览图片所占的宽度\n gridHeight:120, // 每一个预览图片所占的高度\n picWidth:100, // 单张预览图片的宽度\n picHeight:100, // 单张预览图片的高度\n uploadDataFieldName: optImageFieldName, // POST请求中图片数据的key\n picDescFieldName:'pictitle', // POST请求中图片描述的key\n maxSize: maxSize, // 文件的最大体积,单位M\n compressSize:1, // 上传前如果图片体积超过该值，会先压缩,单位M\n maxNum:32, // 单次最大可上传多少个文件\n compressSide: 0, //等比压缩的基准，0为按照最长边，1为按照宽度，2为按照高度\n compressLength: optImageCompressBorder //能接受的最大边长，超过该值Flash会自动等比压缩\n };\n //回调函数集合，支持传递函数名的字符串、函数句柄以及函数本身三种类型\n var callbacks={\n selectFileCallback: function(selectFiles){ // 选择文件的回调\n selectedImageCount += selectFiles.length;\n if(selectedImageCount) baidu.g(\"upload\").style.display = \"\";\n dialog.buttons[0].setDisabled(true); //初始化时置灰确定按钮\n },\n deleteFileCallback: function(delFiles){ // 删除文件的回调\n selectedImageCount -= delFiles.length;\n if (!selectedImageCount) {\n baidu.g(\"upload\").style.display = \"none\";\n dialog.buttons[0].setDisabled(false); //没有选择图片时重新点亮按钮\n }\n },\n uploadCompleteCallback: function(data){ // 单个文件上传完成的回调\n try{var info = eval(\"(\" + data.info + \")\");\n info && imageUrls.push(info);\n selectedImageCount--;\n }catch(e){}\n },\n uploadErrorCallback: function (data){ // 单个文件上传失败的回调,\n console && console.log(data);\n },\n allCompleteCallback: function(){ // 全部上传完成时的回调\n dialog.buttons[0].setDisabled(false); //上传完毕后点亮按钮\n }\n //exceedFileCallback: 'exceedFileCallback', // 文件超出限制的最大体积时的回调\n //startUploadCallback: startUploadCallback // 开始上传某个文件时的回调\n };\n wordImage.init(flashOptions,callbacks);\n });\n\n </script>\n\n</body>\n</html>";
>>>>>>> 37ae7d84528f89f6a5724e2a8e383ff4007c5630
});