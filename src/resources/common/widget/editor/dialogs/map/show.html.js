define(function(require, exports, module) {
    module.exports="<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n <meta charset=\"utf-8\"/>\n <meta name=\"keywords\" content=\"百度地图,百度地图API，百度地图自定义工具，百度地图所见即所得工具\"/>\n <meta name=\"description\" content=\"百度地图API自定义地图，帮助用户在可视化操作下生成百度地图\"/>\n <title>百度地图API自定义地图</title>\n <!--引用百度地图API-->\n <style type=\"text/css\">\n html, body {\n margin: 0;\n padding: 0;\n overflow: hidden;\n }\n </style>\n <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?key=&v=1.1&services=true\"></script>\n</head>\n\n<body onload=\"initMap();\">\n<!--百度地图容器-->\n<div style=\"width:697px;height:550px;border:#ccc solid 1px;\" id=\"dituContent\"></div>\n</body>\n<script type=\"text/javascript\">\n function getParam(name) {\n return location.href.match(new RegExp('[?#&]' + name + '=([^?#&]+)', 'i')) ? RegExp.$1 : '';\n }\n var map, marker;\n var centerParam = getParam('center');\n var zoomParam = getParam('zoom');\n var widthParam = getParam('width');\n var heightParam = getParam('height');\n var markersParam = getParam('markers');\n var markerStylesParam = getParam('markerStyles');\n\n //创建和初始化地图函数：\n function initMap() {\n // [FF]切换模式后报错\n if (!window.BMap) {\n return;\n }\n var dituContent = document.getElementById('dituContent');\n dituContent.style.width = widthParam + 'px';\n dituContent.style.height = heightParam + 'px';\n\n createMap();//创建地图\n setMapEvent();//设置地图事件\n addMapControl();//向地图添加控件\n\n // 创建标注\n var markersArr = markersParam.split(',');\n var point = new BMap.Point(markersArr[0], markersArr[1]);\n marker = new BMap.Marker(point);\n marker.enableDragging();\n map.addOverlay(marker); // 将标注添加到地图中\n\n if(parent.editor && parent.document.body.contentEditable==\"true\") { //在编辑状态下\n setMapListener();//地图改变修改外层的iframe标签src属性\n }\n }\n\n //创建地图函数：\n function createMap() {\n map = new BMap.Map(\"dituContent\");//在百度地图容器中创建一个地图\n var centerArr = centerParam.split(',');\n var point = new BMap.Point(parseFloat(centerArr[0]), parseFloat(centerArr[1]));//定义一个中心点坐标\n map.centerAndZoom(point, parseInt(zoomParam));//设定地图的中心点和坐标并将地图显示在地图容器中\n }\n\n //地图事件设置函数：\n function setMapEvent() {\n map.enableDragging();//启用地图拖拽事件，默认启用(可不写)\n map.enableScrollWheelZoom();//启用地图滚轮放大缩小\n map.enableDoubleClickZoom();//启用鼠标双击放大，默认启用(可不写)\n map.enableKeyboard();//启用键盘上下左右键移动地图\n }\n\n //地图控件添加函数：\n function addMapControl() {\n //向地图中添加缩放控件\n var ctrl_nav = new BMap.NavigationControl({anchor: BMAP_ANCHOR_TOP_LEFT, type: BMAP_NAVIGATION_CONTROL_LARGE});\n map.addControl(ctrl_nav);\n //向地图中添加缩略图控件\n var ctrl_ove = new BMap.OverviewMapControl({anchor: BMAP_ANCHOR_BOTTOM_RIGHT, isOpen: 1});\n map.addControl(ctrl_ove);\n //向地图中添加比例尺控件\n var ctrl_sca = new BMap.ScaleControl({anchor: BMAP_ANCHOR_BOTTOM_LEFT});\n map.addControl(ctrl_sca);\n }\n\n function setMapListener() {\n var editor = parent.editor, containerIframe,\n iframes = parent.document.getElementsByTagName('iframe');\n for (var key in iframes) {\n if (iframes[key].contentWindow == window) {\n containerIframe = iframes[key];\n break;\n }\n }\n if (containerIframe) {\n map.addEventListener('moveend', mapListenerHandler);\n map.addEventListener('zoomend', mapListenerHandler);\n marker.addEventListener('dragend', mapListenerHandler);\n }\n\n function mapListenerHandler() {\n var zoom = map.getZoom(),\n center = map.getCenter(),\n marker = window.marker.getPoint();\n containerIframe.src = containerIframe.src.\n replace(new RegExp('([?#&])center=([^?#&]+)', 'i'), '$1center=' + center.lng + ',' + center.lat).\n replace(new RegExp('([?#&])markers=([^?#&]+)', 'i'), '$1markers=' + marker.lng + ',' + marker.lat).\n replace(new RegExp('([?#&])zoom=([^?#&]+)', 'i'), '$1zoom=' + zoom);\n editor.fireEvent('saveScene');\n }\n }\n</script>\n</html>";
});